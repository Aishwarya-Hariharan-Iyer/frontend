// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Profile renders correctly when there are closed assessments 1`] = `
"<MemoryRouter initialEntries={{...}}>
  <Router history={{...}}>
    <Profile name=\\"yeeet\\" role=\\"staff\\" assessmentOverviews={{...}} isOpen={true} handleAssessmentOverviewFetch={[Function: handleAssessmentOverviewFetch]} onClose={[Function: onClose]}>
      <Blueprint3.Drawer className=\\"profile\\" icon={{...}} isCloseButtonShown={true} isOpen={true} onClose={[Function: onClose]} title=\\"User Profile\\" position=\\"left\\" size=\\"30%\\" canOutsideClickClose={true} shouldReturnFocusOnClose={true} style={{...}} vertical={false}>
        <Blueprint3.Overlay className=\\"bp3-overlay-container\\" icon={{...}} isCloseButtonShown={true} isOpen={true} onClose={[Function: onClose]} title=\\"User Profile\\" position=\\"left\\" size=\\"30%\\" canOutsideClickClose={true} shouldReturnFocusOnClose={true} style={{...}} vertical={false} onOpening={[Function (anonymous)]} onClosed={[Function (anonymous)]} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} hasBackdrop={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true}>
          <Blueprint3.Portal className={[undefined]} container={{...}}>
            <Portal containerInfo={{...}}>
              <TransitionGroup appear={true} className=\\"bp3-overlay bp3-overlay-open bp3-overlay-container\\" component=\\"div\\" onKeyDown={[Function (anonymous)]} childFactory={[Function: childFactory]}>
                <div className=\\"bp3-overlay bp3-overlay-open bp3-overlay-container\\" onKeyDown={[Function (anonymous)]}>
                  <CSSTransition classNames=\\"bp3-overlay\\" timeout={300} addEndListener={[Function (anonymous)]} onExited={[Function: bound bound handleExited]} in={true} appear={true} enter={[undefined]} exit={[undefined]}>
                    <Transition timeout={300} addEndListener={[Function (anonymous)]} onExited={[Function (anonymous)]} in={true} appear={true} enter={true} exit={true} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExiting={[Function (anonymous)]} mountOnEnter={false} unmountOnExit={false}>
                      <div className=\\"bp3-overlay-backdrop\\" onMouseDown={[Function (anonymous)]} tabIndex={0} />
                    </Transition>
                  </CSSTransition>
                  <CSSTransition classNames=\\"bp3-overlay\\" onEntering={[Function (anonymous)]} onEntered={[undefined]} onExiting={[undefined]} onExited={[Function: bound bound handleExited]} timeout={300} addEndListener={[Function (anonymous)]} in={true} appear={true} enter={[undefined]} exit={[undefined]}>
                    <Transition onEntering={[Function (anonymous)]} onEntered={[Function (anonymous)]} onExiting={[Function (anonymous)]} onExited={[Function (anonymous)]} timeout={300} addEndListener={[Function (anonymous)]} in={true} appear={true} enter={true} exit={true} onEnter={[Function (anonymous)]} onExit={[Function (anonymous)]} mountOnEnter={false} unmountOnExit={false}>
                      <div className=\\"bp3-drawer bp3-position-left profile bp3-overlay-content\\" style={{...}} tabIndex={0}>
                        <div className=\\"bp3-drawer-header\\">
                          <Blueprint3.Icon icon={{...}} iconSize={20}>
                            <img className=\\"profile-image-mini\\" src={[undefined]} alt=\\"profile-mini\\" />
                          </Blueprint3.Icon>
                          <Component>
                            <h4 className=\\"bp3-heading\\">
                              User Profile
                            </h4>
                          </Component>
                          <Blueprint3.Button aria-label=\\"Close\\" className=\\"bp3-dialog-close-button\\" icon={{...}} minimal={true} onClick={[Function: onClose]}>
                            <button type=\\"button\\" aria-label=\\"Close\\" className=\\"bp3-button bp3-minimal bp3-dialog-close-button\\" onClick={[Function: onClose]} disabled={[undefined]} onBlur={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                              <Blueprint3.Icon icon={{...}}>
                                <Blueprint3.Icon icon=\\"small-cross\\" iconSize={20}>
                                  <span icon=\\"small-cross\\" className=\\"bp3-icon bp3-icon-small-cross\\" title={[undefined]}>
                                    <svg fill={[undefined]} data-icon=\\"small-cross\\" width={20} height={20} viewBox=\\"0 0 20 20\\">
                                      <desc>
                                        small-cross
                                      </desc>
                                      <path d=\\"M11.41 10l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L10 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L8.59 10 5.3 13.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3.29-3.3 3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10z\\" fillRule=\\"evenodd\\" />
                                    </svg>
                                  </span>
                                </Blueprint3.Icon>
                              </Blueprint3.Icon>
                              <Blueprint3.Icon icon={[undefined]} />
                            </button>
                          </Blueprint3.Button>
                        </div>
                        <Blueprint3.Dialog icon=\\"error\\" isCloseButtonShown={true} isOpen={false} title=\\"Edit Profile Picture\\" canOutsideClickClose={true}>
                          <Blueprint3.Overlay icon=\\"error\\" isCloseButtonShown={true} isOpen={false} title=\\"Edit Profile Picture\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                        </Blueprint3.Dialog>
                        <div className=\\"profile-content\\">
                          <div className=\\"profile-header\\">
                            <div className=\\"profile-image-container\\">
                              <img className=\\"profile-image\\" src={[undefined]} alt=\\"profile\\" />
                              <div className=\\"profile-image-edit-button\\" onClick={[Function: onClick]}>
                                <Blueprint3.Icon icon=\\"edit\\">
                                  <span icon=\\"edit\\" className=\\"bp3-icon bp3-icon-edit\\" title={[undefined]}>
                                    <svg fill={[undefined]} data-icon=\\"edit\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                                      <desc>
                                        edit
                                      </desc>
                                      <path d=\\"M3.25 10.26l2.47 2.47 6.69-6.69-2.46-2.48-6.7 6.7zM.99 14.99l3.86-1.39-2.46-2.44-1.4 3.83zm12.25-14c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.44-1.44c.32-.32.51-.75.51-1.24.01-.95-.77-1.74-1.74-1.74z\\" fillRule=\\"evenodd\\" />
                                    </svg>
                                  </span>
                                </Blueprint3.Icon>
                              </div>
                            </div>
                            <div className=\\"profile-username\\">
                              <div className=\\"name\\">
                                yeeet
                              </div>
                              <div className=\\"role\\">
                                staff
                              </div>
                            </div>
                          </div>
                          <div className=\\"profile-progress\\">
                            <div className=\\"profile-grade\\">
                              <Blueprint3.Spinner className=\\"profile-spinner progress-steelblue\\" size={144} value={1}>
                                <div className=\\"bp3-spinner bp3-no-spin profile-spinner progress-steelblue\\">
                                  <div className=\\"bp3-spinner-animation\\">
                                    <svg width={144} height={144} strokeWidth=\\"2.78\\" viewBox=\\"3.61 3.61 92.78 92.78\\">
                                      <path className=\\"bp3-spinner-track\\" d=\\"M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90\\" />
                                      <path className=\\"bp3-spinner-head\\" d=\\"M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90\\" pathLength={280} strokeDasharray=\\"280 280\\" strokeDashoffset={0} />
                                    </svg>
                                  </div>
                                </div>
                              </Blueprint3.Spinner>
                              <div className=\\"type\\">
                                Grade
                              </div>
                              <div className=\\"total-value\\">
                                0.00
                                 / 
                                0.00
                              </div>
                              <div className=\\"percentage\\">
                                100.00
                                %
                              </div>
                            </div>
                            <div className=\\"profile-xp\\">
                              <Blueprint3.Spinner className=\\"profile-spinner progress-deepskyblue\\" size={144} value={0.62}>
                                <div className=\\"bp3-spinner bp3-no-spin profile-spinner progress-deepskyblue\\">
                                  <div className=\\"bp3-spinner-animation\\">
                                    <svg width={144} height={144} strokeWidth=\\"2.78\\" viewBox=\\"3.61 3.61 92.78 92.78\\">
                                      <path className=\\"bp3-spinner-track\\" d=\\"M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90\\" />
                                      <path className=\\"bp3-spinner-head\\" d=\\"M 50,50 m 0,-45 a 45,45 0 1 1 0,90 a 45,45 0 1 1 0,-90\\" pathLength={280} strokeDasharray=\\"280 280\\" strokeDashoffset={106.4} />
                                    </svg>
                                  </div>
                                </div>
                              </Blueprint3.Spinner>
                              <div className=\\"type\\">
                                XP
                              </div>
                              <div className=\\"total-value\\">
                                1550
                                 / 
                                2500
                              </div>
                              <div className=\\"percentage\\">
                                62.00
                                %
                              </div>
                            </div>
                          </div>
                          <div className=\\"profile-callouts\\">
                            <ProfileCard item={{...}} getFrac={[Function: getFrac]} parseColour={[Function: parseColour]} renderIcon={[Function: renderIcon]}>
                              <NavLink className=\\"profile-summary-navlink\\" target=\\"_blank\\" to=\\"/academy/missions/4/0\\" activeClassName=\\"profile-summary-navlink\\">
                                <Link aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} to={{...}} target=\\"_blank\\">
                                  <LinkAnchor aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} target=\\"_blank\\" href=\\"/academy/missions/4/0\\" navigate={[Function: navigate]}>
                                    <a aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} target=\\"_blank\\" href=\\"/academy/missions/4/0\\" onClick={[Function: onClick]}>
                                      <Blueprint3.Callout className=\\"profile-summary-callout\\" icon=\\"flame\\" title=\\"A closed Mission\\">
                                        <div className=\\"bp3-callout bp3-callout-icon profile-summary-callout\\">
                                          <Blueprint3.Icon icon=\\"flame\\" iconSize={20}>
                                            <span icon=\\"flame\\" className=\\"bp3-icon bp3-icon-flame\\" title={[undefined]}>
                                              <svg fill={[undefined]} data-icon=\\"flame\\" width={20} height={20} viewBox=\\"0 0 20 20\\">
                                                <desc>
                                                  flame
                                                </desc>
                                                <path d=\\"M11.622 0c0 1.71.49 3.077 1.472 4.103C16.364 6.496 18 9.23 18 12.308c0 3.418-1.962 5.983-5.887 7.692 2.887-3 2.453-4.23-.49-8C8.5 13.5 9 14.5 9.5 16.5c-1.048 0-2 0-2.5-.5 0 .684 1.197 2.5 1.952 4-3.924-1.026-8.123-7.18-6.651-7.692.981-.342 2.126-.171 3.434.513C4.1 6.667 6.062 2.393 11.622 0z\\" fillRule=\\"evenodd\\" />
                                              </svg>
                                            </span>
                                          </Blueprint3.Icon>
                                          <Component>
                                            <h4 className=\\"bp3-heading\\">
                                              A closed Mission
                                            </h4>
                                          </Component>
                                          <div className=\\"grade-details\\">
                                            <div className=\\"title\\">
                                              Grade
                                            </div>
                                            <div className=\\"value\\">
                                              2700
                                               / 
                                              3000
                                            </div>
                                            <Blueprint3.ProgressBar animate={false} className=\\"value-bar progress-steelblue\\" stripes={false} value={0.9}>
                                              <div className=\\"bp3-progress-bar bp3-no-animation bp3-no-stripes value-bar progress-steelblue\\">
                                                <div className=\\"bp3-progress-meter\\" style={{...}} />
                                              </div>
                                            </Blueprint3.ProgressBar>
                                          </div>
                                          <div className=\\"xp-details\\">
                                            <div className=\\"title\\">
                                              XP
                                            </div>
                                            <div className=\\"value\\">
                                              800
                                               / 
                                              1000
                                            </div>
                                            <Blueprint3.ProgressBar animate={false} className=\\"value-bar progress-steelblue\\" stripes={false} value={0.8}>
                                              <div className=\\"bp3-progress-bar bp3-no-animation bp3-no-stripes value-bar progress-steelblue\\">
                                                <div className=\\"bp3-progress-meter\\" style={{...}} />
                                              </div>
                                            </Blueprint3.ProgressBar>
                                          </div>
                                        </div>
                                      </Blueprint3.Callout>
                                    </a>
                                  </LinkAnchor>
                                </Link>
                              </NavLink>
                            </ProfileCard>
                            <ProfileCard item={{...}} getFrac={[Function: getFrac]} parseColour={[Function: parseColour]} renderIcon={[Function: renderIcon]}>
                              <NavLink className=\\"profile-summary-navlink\\" target=\\"_blank\\" to=\\"/academy/quests/5/0\\" activeClassName=\\"profile-summary-navlink\\">
                                <Link aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} to={{...}} target=\\"_blank\\">
                                  <LinkAnchor aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} target=\\"_blank\\" href=\\"/academy/quests/5/0\\" navigate={[Function: navigate]}>
                                    <a aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} target=\\"_blank\\" href=\\"/academy/quests/5/0\\" onClick={[Function: onClick]}>
                                      <Blueprint3.Callout className=\\"profile-summary-callout\\" icon=\\"lightbulb\\" title=\\"Closed (not graded) Sidequest\\">
                                        <div className=\\"bp3-callout bp3-callout-icon profile-summary-callout\\">
                                          <Blueprint3.Icon icon=\\"lightbulb\\" iconSize={20}>
                                            <span icon=\\"lightbulb\\" className=\\"bp3-icon bp3-icon-lightbulb\\" title={[undefined]}>
                                              <svg fill={[undefined]} data-icon=\\"lightbulb\\" width={20} height={20} viewBox=\\"0 0 20 20\\">
                                                <desc>
                                                  lightbulb
                                                </desc>
                                                <path d=\\"M6.33 13.39c0 .34.27.61.6.61h6.13c.33 0 .6-.27.6-.61C14.03 9.78 16 9.4 16 6.09 16 2.72 13.31 0 10 0S4 2.72 4 6.09c0 3.31 1.97 3.69 2.33 7.3zM13 15H7c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-1 3H8c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                                              </svg>
                                            </span>
                                          </Blueprint3.Icon>
                                          <Component>
                                            <h4 className=\\"bp3-heading\\">
                                              Closed (not graded) Sidequest
                                            </h4>
                                          </Component>
                                          <div className=\\"xp-details\\">
                                            <div className=\\"title\\">
                                              XP
                                            </div>
                                            <div className=\\"value\\">
                                              500
                                               / 
                                              1000
                                            </div>
                                            <Blueprint3.ProgressBar animate={false} className=\\"value-bar progress-deepskyblue\\" stripes={false} value={0.5}>
                                              <div className=\\"bp3-progress-bar bp3-no-animation bp3-no-stripes value-bar progress-deepskyblue\\">
                                                <div className=\\"bp3-progress-meter\\" style={{...}} />
                                              </div>
                                            </Blueprint3.ProgressBar>
                                          </div>
                                        </div>
                                      </Blueprint3.Callout>
                                    </a>
                                  </LinkAnchor>
                                </Link>
                              </NavLink>
                            </ProfileCard>
                            <ProfileCard item={{...}} getFrac={[Function: getFrac]} parseColour={[Function: parseColour]} renderIcon={[Function: renderIcon]}>
                              <NavLink className=\\"profile-summary-navlink\\" target=\\"_blank\\" to=\\"/academy/quests/5/0\\" activeClassName=\\"profile-summary-navlink\\">
                                <Link aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} to={{...}} target=\\"_blank\\">
                                  <LinkAnchor aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} target=\\"_blank\\" href=\\"/academy/quests/5/0\\" navigate={[Function: navigate]}>
                                    <a aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} target=\\"_blank\\" href=\\"/academy/quests/5/0\\" onClick={[Function: onClick]}>
                                      <Blueprint3.Callout className=\\"profile-summary-callout\\" icon=\\"lightbulb\\" title=\\"Closed (fully graded) Sidequest\\">
                                        <div className=\\"bp3-callout bp3-callout-icon profile-summary-callout\\">
                                          <Blueprint3.Icon icon=\\"lightbulb\\" iconSize={20}>
                                            <span icon=\\"lightbulb\\" className=\\"bp3-icon bp3-icon-lightbulb\\" title={[undefined]}>
                                              <svg fill={[undefined]} data-icon=\\"lightbulb\\" width={20} height={20} viewBox=\\"0 0 20 20\\">
                                                <desc>
                                                  lightbulb
                                                </desc>
                                                <path d=\\"M6.33 13.39c0 .34.27.61.6.61h6.13c.33 0 .6-.27.6-.61C14.03 9.78 16 9.4 16 6.09 16 2.72 13.31 0 10 0S4 2.72 4 6.09c0 3.31 1.97 3.69 2.33 7.3zM13 15H7c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-1 3H8c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                                              </svg>
                                            </span>
                                          </Blueprint3.Icon>
                                          <Component>
                                            <h4 className=\\"bp3-heading\\">
                                              Closed (fully graded) Sidequest
                                            </h4>
                                          </Component>
                                          <div className=\\"xp-details\\">
                                            <div className=\\"title\\">
                                              XP
                                            </div>
                                            <div className=\\"value\\">
                                              150
                                               / 
                                              500
                                            </div>
                                            <Blueprint3.ProgressBar animate={false} className=\\"value-bar progress-skyblue\\" stripes={false} value={0.3}>
                                              <div className=\\"bp3-progress-bar bp3-no-animation bp3-no-stripes value-bar progress-skyblue\\">
                                                <div className=\\"bp3-progress-meter\\" style={{...}} />
                                              </div>
                                            </Blueprint3.ProgressBar>
                                          </div>
                                        </div>
                                      </Blueprint3.Callout>
                                    </a>
                                  </LinkAnchor>
                                </Link>
                              </NavLink>
                            </ProfileCard>
                            <ProfileCard item={{...}} getFrac={[Function: getFrac]} parseColour={[Function: parseColour]} renderIcon={[Function: renderIcon]}>
                              <NavLink className=\\"profile-summary-navlink\\" target=\\"_blank\\" to=\\"/academy/quests/5/0\\" activeClassName=\\"profile-summary-navlink\\">
                                <Link aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} to={{...}} target=\\"_blank\\">
                                  <LinkAnchor aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} target=\\"_blank\\" href=\\"/academy/quests/5/0\\" navigate={[Function: navigate]}>
                                    <a aria-current={{...}} className=\\"profile-summary-navlink\\" style={[undefined]} target=\\"_blank\\" href=\\"/academy/quests/5/0\\" onClick={[Function: onClick]}>
                                      <Blueprint3.Callout className=\\"profile-summary-callout\\" icon=\\"lightbulb\\" title=\\"Ungraded assessment\\">
                                        <div className=\\"bp3-callout bp3-callout-icon profile-summary-callout\\">
                                          <Blueprint3.Icon icon=\\"lightbulb\\" iconSize={20}>
                                            <span icon=\\"lightbulb\\" className=\\"bp3-icon bp3-icon-lightbulb\\" title={[undefined]}>
                                              <svg fill={[undefined]} data-icon=\\"lightbulb\\" width={20} height={20} viewBox=\\"0 0 20 20\\">
                                                <desc>
                                                  lightbulb
                                                </desc>
                                                <path d=\\"M6.33 13.39c0 .34.27.61.6.61h6.13c.33 0 .6-.27.6-.61C14.03 9.78 16 9.4 16 6.09 16 2.72 13.31 0 10 0S4 2.72 4 6.09c0 3.31 1.97 3.69 2.33 7.3zM13 15H7c-.55 0-1 .45-1 1s.45 1 1 1h6c.55 0 1-.45 1-1s-.45-1-1-1zm-1 3H8c-.55 0-1 .45-1 1s.45 1 1 1h4c.55 0 1-.45 1-1s-.45-1-1-1z\\" fillRule=\\"evenodd\\" />
                                              </svg>
                                            </span>
                                          </Blueprint3.Icon>
                                          <Component>
                                            <h4 className=\\"bp3-heading\\">
                                              Ungraded assessment
                                            </h4>
                                          </Component>
                                          <div className=\\"xp-details\\">
                                            <div className=\\"title\\">
                                              XP
                                            </div>
                                            <div className=\\"value\\">
                                              100
                                               / 
                                              0
                                            </div>
                                            <Blueprint3.ProgressBar animate={false} className=\\"value-bar progress-steelblue\\" stripes={false} value={1}>
                                              <div className=\\"bp3-progress-bar bp3-no-animation bp3-no-stripes value-bar progress-steelblue\\">
                                                <div className=\\"bp3-progress-meter\\" style={{...}} />
                                              </div>
                                            </Blueprint3.ProgressBar>
                                          </div>
                                        </div>
                                      </Blueprint3.Callout>
                                    </a>
                                  </LinkAnchor>
                                </Link>
                              </NavLink>
                            </ProfileCard>
                          </div>
                        </div>
                      </div>
                    </Transition>
                  </CSSTransition>
                </div>
              </TransitionGroup>
            </Portal>
          </Blueprint3.Portal>
        </Blueprint3.Overlay>
      </Blueprint3.Drawer>
    </Profile>
  </Router>
</MemoryRouter>"
`;

exports[`Profile renders correctly when there are no closed assessments 1`] = `
"<MemoryRouter initialEntries={{...}}>
  <Router history={{...}}>
    <Profile name=\\"yeet\\" role=\\"student\\" assessmentOverviews={{...}} isOpen={true} handleAssessmentOverviewFetch={[Function: handleAssessmentOverviewFetch]} onClose={[Function: onClose]}>
      <Blueprint3.Drawer className=\\"profile\\" icon={{...}} isCloseButtonShown={true} isOpen={true} onClose={[Function: onClose]} title=\\"User Profile\\" position=\\"left\\" size=\\"30%\\" canOutsideClickClose={true} shouldReturnFocusOnClose={true} style={{...}} vertical={false}>
        <Blueprint3.Overlay className=\\"bp3-overlay-container\\" icon={{...}} isCloseButtonShown={true} isOpen={true} onClose={[Function: onClose]} title=\\"User Profile\\" position=\\"left\\" size=\\"30%\\" canOutsideClickClose={true} shouldReturnFocusOnClose={true} style={{...}} vertical={false} onOpening={[Function (anonymous)]} onClosed={[Function (anonymous)]} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} hasBackdrop={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true}>
          <Blueprint3.Portal className={[undefined]} container={{...}}>
            <Portal containerInfo={{...}}>
              <TransitionGroup appear={true} className=\\"bp3-overlay bp3-overlay-open bp3-overlay-container\\" component=\\"div\\" onKeyDown={[Function (anonymous)]} childFactory={[Function: childFactory]}>
                <div className=\\"bp3-overlay bp3-overlay-open bp3-overlay-container\\" onKeyDown={[Function (anonymous)]}>
                  <CSSTransition classNames=\\"bp3-overlay\\" timeout={300} addEndListener={[Function (anonymous)]} onExited={[Function: bound bound handleExited]} in={true} appear={true} enter={[undefined]} exit={[undefined]}>
                    <Transition timeout={300} addEndListener={[Function (anonymous)]} onExited={[Function (anonymous)]} in={true} appear={true} enter={true} exit={true} onEnter={[Function (anonymous)]} onEntered={[Function (anonymous)]} onEntering={[Function (anonymous)]} onExit={[Function (anonymous)]} onExiting={[Function (anonymous)]} mountOnEnter={false} unmountOnExit={false}>
                      <div className=\\"bp3-overlay-backdrop\\" onMouseDown={[Function (anonymous)]} tabIndex={0} />
                    </Transition>
                  </CSSTransition>
                  <CSSTransition classNames=\\"bp3-overlay\\" onEntering={[Function (anonymous)]} onEntered={[undefined]} onExiting={[undefined]} onExited={[Function: bound bound handleExited]} timeout={300} addEndListener={[Function (anonymous)]} in={true} appear={true} enter={[undefined]} exit={[undefined]}>
                    <Transition onEntering={[Function (anonymous)]} onEntered={[Function (anonymous)]} onExiting={[Function (anonymous)]} onExited={[Function (anonymous)]} timeout={300} addEndListener={[Function (anonymous)]} in={true} appear={true} enter={true} exit={true} onEnter={[Function (anonymous)]} onExit={[Function (anonymous)]} mountOnEnter={false} unmountOnExit={false}>
                      <div className=\\"bp3-drawer bp3-position-left profile bp3-overlay-content\\" style={{...}} tabIndex={0}>
                        <div className=\\"bp3-drawer-header\\">
                          <Blueprint3.Icon icon={{...}} iconSize={20}>
                            <img className=\\"profile-image-mini\\" src={[undefined]} alt=\\"profile-mini\\" />
                          </Blueprint3.Icon>
                          <Component>
                            <h4 className=\\"bp3-heading\\">
                              User Profile
                            </h4>
                          </Component>
                          <Blueprint3.Button aria-label=\\"Close\\" className=\\"bp3-dialog-close-button\\" icon={{...}} minimal={true} onClick={[Function: onClose]}>
                            <button type=\\"button\\" aria-label=\\"Close\\" className=\\"bp3-button bp3-minimal bp3-dialog-close-button\\" onClick={[Function: onClose]} disabled={[undefined]} onBlur={[Function (anonymous)]} onKeyDown={[Function (anonymous)]} onKeyUp={[Function (anonymous)]} tabIndex={[undefined]}>
                              <Blueprint3.Icon icon={{...}}>
                                <Blueprint3.Icon icon=\\"small-cross\\" iconSize={20}>
                                  <span icon=\\"small-cross\\" className=\\"bp3-icon bp3-icon-small-cross\\" title={[undefined]}>
                                    <svg fill={[undefined]} data-icon=\\"small-cross\\" width={20} height={20} viewBox=\\"0 0 20 20\\">
                                      <desc>
                                        small-cross
                                      </desc>
                                      <path d=\\"M11.41 10l3.29-3.29c.19-.18.3-.43.3-.71a1.003 1.003 0 00-1.71-.71L10 8.59l-3.29-3.3a1.003 1.003 0 00-1.42 1.42L8.59 10 5.3 13.29c-.19.18-.3.43-.3.71a1.003 1.003 0 001.71.71l3.29-3.3 3.29 3.29c.18.19.43.3.71.3a1.003 1.003 0 00.71-1.71L11.41 10z\\" fillRule=\\"evenodd\\" />
                                    </svg>
                                  </span>
                                </Blueprint3.Icon>
                              </Blueprint3.Icon>
                              <Blueprint3.Icon icon={[undefined]} />
                            </button>
                          </Blueprint3.Button>
                        </div>
                        <Blueprint3.Dialog icon=\\"error\\" isCloseButtonShown={true} isOpen={false} title=\\"Edit Profile Picture\\" canOutsideClickClose={true}>
                          <Blueprint3.Overlay icon=\\"error\\" isCloseButtonShown={true} isOpen={false} title=\\"Edit Profile Picture\\" canOutsideClickClose={true} className=\\"bp3-overlay-scroll-container\\" hasBackdrop={true} autoFocus={true} backdropProps={{...}} canEscapeKeyClose={true} enforceFocus={true} lazy={true} transitionDuration={300} transitionName=\\"bp3-overlay\\" usePortal={true} />
                        </Blueprint3.Dialog>
                        <div className=\\"profile-content\\">
                          <div className=\\"profile-header\\">
                            <div className=\\"profile-image-container\\">
                              <img className=\\"profile-image\\" src={[undefined]} alt=\\"profile\\" />
                              <div className=\\"profile-image-edit-button\\" onClick={[Function: onClick]}>
                                <Blueprint3.Icon icon=\\"edit\\">
                                  <span icon=\\"edit\\" className=\\"bp3-icon bp3-icon-edit\\" title={[undefined]}>
                                    <svg fill={[undefined]} data-icon=\\"edit\\" width={16} height={16} viewBox=\\"0 0 16 16\\">
                                      <desc>
                                        edit
                                      </desc>
                                      <path d=\\"M3.25 10.26l2.47 2.47 6.69-6.69-2.46-2.48-6.7 6.7zM.99 14.99l3.86-1.39-2.46-2.44-1.4 3.83zm12.25-14c-.48 0-.92.2-1.24.51l-1.44 1.44 2.47 2.47 1.44-1.44c.32-.32.51-.75.51-1.24.01-.95-.77-1.74-1.74-1.74z\\" fillRule=\\"evenodd\\" />
                                    </svg>
                                  </span>
                                </Blueprint3.Icon>
                              </div>
                            </div>
                            <div className=\\"profile-username\\">
                              <div className=\\"name\\">
                                yeet
                              </div>
                              <div className=\\"role\\">
                                student
                              </div>
                            </div>
                          </div>
                          <div className=\\"profile-placeholder\\">
                            There are no closed assessments to render grade and XP of.
                          </div>
                        </div>
                      </div>
                    </Transition>
                  </CSSTransition>
                </div>
              </TransitionGroup>
            </Portal>
          </Blueprint3.Portal>
        </Blueprint3.Overlay>
      </Blueprint3.Drawer>
    </Profile>
  </Router>
</MemoryRouter>"
`;
